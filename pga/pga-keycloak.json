{
  "id": "19e84580-40ed-4a10-9a34-16fb8af96517",
  "realm": "admin",
  "notBefore": 1652971861,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "none",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "65a32b09-42e6-4f97-b958-7579b91f0231",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {}
      },
      {
        "id": "7eb5159e-0e50-47c1-8ef8-d71b8af34131",
        "name": "Administrators",
        "composite": false,
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {
          "role": [
            "role_user"
          ]
        }
      },
      {
        "id": "9b1a1868-c711-4a3e-8b2a-2aaec8dd1a02",
        "name": "admin",
        "composite": true,
        "composites": {
          "realm": [
            "user"
          ],
          "client": {
            "realm-management": [
              "manage-realm",
              "manage-users",
              "view-clients",
              "query-users",
              "manage-clients",
              "manage-identity-providers",
              "query-clients",
              "view-identity-providers",
              "manage-authorization",
              "realm-admin",
              "view-users",
              "view-authorization",
              "query-groups",
              "manage-events",
              "impersonation",
              "view-realm",
              "create-client",
              "view-events"
            ],
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {}
      },
      {
        "id": "226ed545-c20f-408c-a01f-86c784fc51d6",
        "name": "user",
        "composite": false,
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {
          "role": [
            "role_user"
          ]
        }
      },
      {
        "id": "d6c3a725-1454-4a35-b51f-dacf4f1c1c64",
        "name": "default-roles-cpqd-portal",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {}
      },
      {
        "id": "34fbe435-e1f3-4a90-8e44-f02d7f0b158d",
        "name": "company",
        "composite": false,
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {
          "role": [
            "role_user"
          ]
        }
      },
      {
        "id": "354280a7-5a71-4b88-8785-ee396bcade73",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {}
      },
      {
        "id": "23d53b3f-7cdd-4705-a0c3-7b1c0a9061e7",
        "name": "kie-server",
        "composite": false,
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {
          "role": [
            "role_user"
          ]
        }
      },
      {
        "id": "c6d48a01-a45b-4910-aca8-574deca70509",
        "name": "kiemgmt",
        "composite": false,
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {
          "role": [
            "role_user"
          ]
        }
      },
      {
        "id": "086dd6ef-aab5-468b-b7e6-85a6a5324a3d",
        "name": "default-roles-admin",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {}
      },
      {
        "id": "c32b1cca-743e-48cf-8e3c-b8041a2208fd",
        "name": "rest-all",
        "composite": false,
        "clientRole": false,
        "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517",
        "attributes": {
          "role": [
            "role_user"
          ]
        }
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "d0bb645d-ff78-4a05-b625-10f8726163cc",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "02586ba6-0b41-4d0c-9bd8-a07c10d0d828",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "0a6f9019-2928-451d-aad6-0705ed050668",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "a34e8de6-b01a-432a-8ef6-54e441e80bc6",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "7e9a9d90-bac3-4e04-bc41-14fab90cdcf2",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "45f71327-cc2c-4a59-a6da-7b1be84f3c29",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "39356b72-dc85-4165-9538-c1753c3497c0",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "6a5e8c69-4009-4537-b487-a549b263390e",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "232b6139-5e03-4d66-8e85-7cbb1fed780b",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "728a00df-6b2a-42a4-bd65-b5f90a27cb4a",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "d689c07b-da42-49d2-9916-7c495fea86e5",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-realm",
                "manage-users",
                "query-realms",
                "view-clients",
                "query-users",
                "manage-clients",
                "manage-identity-providers",
                "query-clients",
                "view-identity-providers",
                "manage-authorization",
                "view-users",
                "view-authorization",
                "query-groups",
                "manage-events",
                "impersonation",
                "view-realm",
                "create-client",
                "view-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "ee58948e-7b12-4387-8aad-0612eb876d44",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "ff3eae5e-47f4-41ff-bbde-053d0167a0ff",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "9a3cf2ce-2a53-4b98-97a6-22d812634a1b",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "200a56bb-08d3-49f5-9556-cb3ac682b991",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "955e585e-4125-42e6-98df-9e8a776022fd",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "0d3dfd55-27a0-496b-9a05-0038439ebeba",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "9c176420-ccca-44b8-b634-c6aeab8471a8",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        },
        {
          "id": "1069fabb-2b6d-42ef-a938-64c001f93b3a",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "dev-test-cli": [],
      "ADM": [
        {
          "id": "c33712db-8a37-4200-8ba6-1a6a6021ef3b",
          "name": "image_ADM",
          "composite": false,
          "clientRole": true,
          "containerId": "f496e049-f6ef-4686-9edc-1ed302e2aa49",
          "attributes": {
            "role": [
              "role_client"
            ]
          }
        },
        {
          "id": "fae16b7c-0aec-4021-8dd5-e634e1a6a007",
          "name": "client",
          "composite": false,
          "clientRole": true,
          "containerId": "f496e049-f6ef-4686-9edc-1ed302e2aa49",
          "attributes": {
            "role": [
              "role_client"
            ]
          }
        }
      ],
      "PGA": [
        {
          "id": "9d2a6513-8856-4ec3-83a3-ec77af3400e0",
          "name": "image_PGA",
          "composite": false,
          "clientRole": true,
          "containerId": "73b7cd34-4b1c-41eb-a31f-51c6fbf3ac87",
          "attributes": {
            "role": [
              "role_client"
            ]
          }
        }
      ],
      "account-console": [],
      "Manager": [],
      "broker": [
        {
          "id": "920c1c4a-933c-4b74-bcac-5c6764c08d0d",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "3970e151-16dc-4f92-869b-cb25f85bdf32",
          "attributes": {}
        }
      ],
      "business-central": [
        {
          "id": "6b267516-f6fa-4b8c-8ebd-ae910f30d297",
          "name": "image_business-central",
          "composite": false,
          "clientRole": true,
          "containerId": "9f7922f4-3c57-42c3-ad54-656d08e5de84",
          "attributes": {}
        },
        {
          "id": "c64c5c43-9085-4674-b405-5c58c17a7b0f",
          "name": "client",
          "composite": false,
          "clientRole": true,
          "containerId": "9f7922f4-3c57-42c3-ad54-656d08e5de84",
          "attributes": {
            "role": [
              "role_client"
            ]
          }
        }
      ],
      "kong": [
        {
          "id": "00afd27a-db7e-4f5b-b200-11a828c2935f",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "3b2efe69-8218-4923-9e7f-fc6fc7bb60ae",
          "attributes": {}
        }
      ],
      "admin-cli": [],
      "gui": [],
      "Geoanalytics": [
        {
          "id": "488e6e77-899c-4e21-94da-8baee050d52c",
          "name": "image_Geoanalytics",
          "composite": false,
          "clientRole": true,
          "containerId": "afeb7cd8-d13b-4140-9eac-389c25c0b337",
          "attributes": {
            "role": [
              "role_client"
            ]
          }
        },
        {
          "id": "2e7b9426-ac7a-42ec-aa6d-55dba0d7b204",
          "name": "client",
          "composite": false,
          "clientRole": true,
          "containerId": "afeb7cd8-d13b-4140-9eac-389c25c0b337",
          "attributes": {
            "role": [
              "role_client"
            ]
          }
        }
      ],
      "kie-server": [
        {
          "id": "0191657a-1447-40f4-bd1c-8c815760b30f",
          "name": "image_kie-server",
          "composite": false,
          "clientRole": true,
          "containerId": "bbd2e537-7759-4158-86a7-b993251449bd",
          "attributes": {
            "role": [
              "role_client"
            ]
          }
        },
        {
          "id": "5965127f-ebe2-442e-af9e-9ecaae9bb704",
          "name": "client",
          "composite": false,
          "clientRole": true,
          "containerId": "bbd2e537-7759-4158-86a7-b993251449bd",
          "attributes": {
            "role": [
              "role_client"
            ]
          }
        }
      ],
      "account": [
        {
          "id": "a96ea374-7cbc-4006-ad5f-425c1d938354",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "de32e066-96fc-421b-a794-4d9ac6ed0f22",
          "attributes": {}
        },
        {
          "id": "1993a04b-807e-4b1c-a839-1c675ee955b9",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "de32e066-96fc-421b-a794-4d9ac6ed0f22",
          "attributes": {}
        },
        {
          "id": "48d11113-7b9a-4dac-8c7d-cd565d469ef4",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "de32e066-96fc-421b-a794-4d9ac6ed0f22",
          "attributes": {}
        },
        {
          "id": "fb889099-1f69-4d4a-b054-553f2edbd77c",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "de32e066-96fc-421b-a794-4d9ac6ed0f22",
          "attributes": {}
        },
        {
          "id": "a74de59b-726f-4f9f-ba89-d678155f67c5",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "de32e066-96fc-421b-a794-4d9ac6ed0f22",
          "attributes": {}
        },
        {
          "id": "00049213-5759-45c1-9346-20900a78e494",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "de32e066-96fc-421b-a794-4d9ac6ed0f22",
          "attributes": {}
        },
        {
          "id": "17d58bb0-0e5b-4750-ad71-5544981c540c",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "de32e066-96fc-421b-a794-4d9ac6ed0f22",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "86c5d8be-7d85-4912-ba6e-8f769c3cfdfa",
      "name": "companys",
      "path": "/companys",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": [
        {
          "id": "45158078-530f-4aab-b31b-829730532fd3",
          "name": "company",
          "path": "/companys/company",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        }
      ]
    },
    {
      "id": "8202e9d4-92eb-435a-bd5e-3fa558f66d0a",
      "name": "groupCompanyUser",
      "path": "/groupCompanyUser",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": [
        {
          "id": "d9973e4f-08a0-4a32-b970-288ebc89cbc1",
          "name": "company",
          "path": "/groupCompanyUser/company",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        }
      ]
    },
    {
      "id": "b8a5e574-923c-4b34-bf26-617a8b813049",
      "name": "users",
      "path": "/users",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": [
        {
          "id": "ff95c951-6daa-47f5-bbc7-f0188dff972e",
          "name": "company",
          "path": "/users/company",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        }
      ]
    }
  ],
  "defaultRole": {
    "id": "086dd6ef-aab5-468b-b7e6-85a6a5324a3d",
    "name": "default-roles-admin",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "19e84580-40ed-4a10-9a34-16fb8af96517"
  },
  "requiredCredentials": [
    "password"
  ],
  "passwordPolicy": "passwordBlacklist(dojot-password-blacklist.txt) and length(8) and notUsername(undefined) and notEmail(undefined) and specialChars(1) and upperCase(1) and lowerCase(1) and digits(1)",
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": [
      {
        "name": "builtin-default-policy",
        "builtin": true,
        "enable": false
      }
    ]
  },
  "users": [
    {
      "id": "f26c2454-3e5f-4283-b443-0504d3e17283",
      "username": "service-account-kong",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "kong",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "manage-account",
          "view-profile"
        ],
        "kong": [
          "uma_protection"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "f496e049-f6ef-4686-9edc-1ed302e2aa49",
      "clientId": "ADM",
      "name": "ADM",
      "description": "Configuração para autenticação e autorização de acesso ao sistema",
      "rootUrl": "http://localhost:9081",
      "adminUrl": "http://localhost:9081",
      "baseUrl": "http://localhost:9081",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "afeb7cd8-d13b-4140-9eac-389c25c0b337",
      "clientId": "Geoanalytics",
      "rootUrl": "http://localhost:7171/knowage",
      "adminUrl": "http://localhost:7171/knowage",
      "baseUrl": "http://localhost:7171/knowage",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5ecdac24-dd71-476d-a53d-324c2d0dfcbb",
      "clientId": "Manager",
      "rootUrl": "http://localhost:8980",
      "adminUrl": "http://localhost:8980",
      "baseUrl": "http://localhost:8980/cpqd-manager/business-central",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "73b7cd34-4b1c-41eb-a31f-51c6fbf3ac87",
      "clientId": "PGA",
      "rootUrl": "http://localhost:7878",
      "adminUrl": "http://localhost:7878",
      "baseUrl": "http://localhost:7878",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "de32e066-96fc-421b-a794-4d9ac6ed0f22",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/admin/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/admin/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b94551e8-b90c-408c-b172-5667079e16cb",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/admin/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/admin/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "381c46a4-126b-499a-9bd5-090290066105",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "46355c9c-c5f4-4bfe-9e7c-daa1cf5a06fe",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3970e151-16dc-4f92-869b-cb25f85bdf32",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9f7922f4-3c57-42c3-ad54-656d08e5de84",
      "clientId": "business-central",
      "rootUrl": "http://localhost:8980",
      "adminUrl": "http://localhost:8980",
      "baseUrl": "http://localhost:8980/cpqd-manager/business-central",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "saml.server.signature": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1100057c-b4b1-4c3d-a5ca-6b7fce18588d",
      "clientId": "dev-test-cli",
      "rootUrl": "http://localhost:8000",
      "surrogateAuthRequired": false,
      "enabled": false,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7cebab8d-733c-46e6-bff1-cfd5ff26d657",
      "clientId": "gui",
      "rootUrl": "http://localhost:8000",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bbd2e537-7759-4158-86a7-b993251449bd",
      "clientId": "kie-server",
      "rootUrl": "http://localhost:8980",
      "adminUrl": "http://localhost:8980",
      "baseUrl": "http://localhost:8980/cpqd-manager/kie-server",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3b2efe69-8218-4923-9e7f-fc6fc7bb60ae",
      "clientId": "kong",
      "rootUrl": "http://localhost:8000",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "2e23db49-5a07-4c43-b167-561783d67e7a",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0eba171c-ebd6-41e2-94ab-7b87666a9520",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "24dab999-fd94-443e-8202-24aef80d3151",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "history",
            "ownerManagedAccess": false,
            "displayName": "History: /history",
            "attributes": {},
            "_id": "3120d980-430e-4098-891b-aff9df27e61b",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              }
            ]
          },
          {
            "name": "Default Resource",
            "type": "urn:kong:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "c4a16376-2125-4a71-a0af-63562068844b",
            "uris": [
              "/*"
            ]
          },
          {
            "name": "device-manager-devices",
            "ownerManagedAccess": true,
            "displayName": "Device manager: /devices",
            "attributes": {},
            "_id": "e4b71b69-4dae-41c7-a1d2-f57dd8bfeb6e",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "update"
              },
              {
                "name": "delete"
              },
              {
                "name": "create"
              }
            ]
          },
          {
            "name": "device-manager-template",
            "ownerManagedAccess": false,
            "displayName": "Device manager: /template",
            "attributes": {},
            "_id": "bbafbcf8-98f9-4042-a1d2-cca575d43b5e",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "update"
              },
              {
                "name": "delete"
              },
              {
                "name": "create"
              }
            ]
          },
          {
            "name": "flows",
            "ownerManagedAccess": true,
            "displayName": "Flowbroker: /flows",
            "attributes": {},
            "_id": "d4bee273-ce43-4cb2-8781-d75b6b5e81b7",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "update"
              },
              {
                "name": "delete"
              },
              {
                "name": "create"
              }
            ]
          },
          {
            "name": "x509-identity-mgmt",
            "ownerManagedAccess": true,
            "displayName": "x509-identity-mgmt: /x509",
            "attributes": {},
            "_id": "e4fdfe78-2d6a-4b49-8f07-c97e87a73416",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "update"
              },
              {
                "name": "delete"
              },
              {
                "name": "create"
              }
            ]
          },
          {
            "name": "data-broker",
            "ownerManagedAccess": true,
            "displayName": "data-broker:  /device/(.*)/latest\", /subscription\"",
            "attributes": {},
            "_id": "0160061a-a4f1-479b-95b5-9f6291f2e6b6",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "update"
              },
              {
                "name": "delete"
              },
              {
                "name": "create"
              }
            ]
          },
          {
            "name": "data-broker-streams",
            "ownerManagedAccess": true,
            "displayName": "data-broker-streams: /stream",
            "attributes": {},
            "_id": "a6b93d1a-6ca1-40dd-a1d0-2204157dc460",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              }
            ]
          },
          {
            "name": "image",
            "ownerManagedAccess": true,
            "displayName": "image: /fw-image/",
            "attributes": {},
            "_id": "35262d61-8055-479a-91a5-3103ec251d72",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "update"
              },
              {
                "name": "delete"
              },
              {
                "name": "create"
              }
            ]
          },
          {
            "name": "data-manager-import",
            "ownerManagedAccess": true,
            "displayName": "data-manager-import: /import",
            "attributes": {},
            "_id": "5efdf8de-6a16-4e9c-9284-9eb8a6b0514b",
            "uris": [],
            "scopes": [
              {
                "name": "create"
              }
            ]
          },
          {
            "name": "data-manager-export",
            "ownerManagedAccess": true,
            "displayName": "data-manager-export: /export",
            "attributes": {},
            "_id": "58ae10aa-fba8-426c-a79f-f9140aecd78c",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              }
            ]
          },
          {
            "name": "cron",
            "ownerManagedAccess": true,
            "displayName": "cron:  /cron",
            "attributes": {},
            "_id": "e25053e2-5f3b-4d81-9ce7-341abc912ede",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              },
              {
                "name": "update"
              },
              {
                "name": "delete"
              },
              {
                "name": "create"
              }
            ]
          },
          {
            "name": "influxdb-retriever",
            "ownerManagedAccess": true,
            "displayName": "influxdb-retriever: /tss",
            "attributes": {},
            "_id": "40f25e44-2cb5-4a7a-baa5-338fca95ae12",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              }
            ]
          },
          {
            "name": "kafka-ws-ticket",
            "ownerManagedAccess": true,
            "displayName": "kafka-ws-ticket: /kafka-ws",
            "attributes": {},
            "_id": "5f80db55-11be-4e42-befd-9dd3a66302a6",
            "uris": [],
            "scopes": [
              {
                "name": "view"
              }
            ]
          }
        ],
        "policies": [
          {
            "id": "a5041b2c-e843-439d-8650-86524d1f682c",
            "name": "Should be user",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"user\",\"required\":true}]"
            }
          },
          {
            "id": "19980667-ed98-4faf-a626-d587fcf2fe8f",
            "name": "Should be admin",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"admin\",\"required\":true}]"
            }
          },
          {
            "id": "9842e400-819e-48ed-a3bf-4a4f087caff1",
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "id": "170311fd-0a6a-479c-ba48-ca18d227e9af",
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:kong:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          },
          {
            "id": "f6034a13-10d7-4955-a5e4-ee22888a142d",
            "name": "Full access in Device Manager - /device",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"device-manager-devices\"]",
              "scopes": "[\"view\",\"create\",\"delete\",\"update\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "428908a4-12e8-4970-9191-93d0d611fcf4",
            "name": "Full access in Device Manager - /template",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"device-manager-template\"]",
              "scopes": "[\"view\",\"create\",\"delete\",\"update\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "6b931800-a28e-43f1-991d-61f7feb53230",
            "name": "View history - /history",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"history\"]",
              "scopes": "[\"view\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "846e3c65-1c6a-4a94-8c46-52e8bc83816f",
            "name": "Full access in Flows - /flow",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"flows\"]",
              "scopes": "[\"view\",\"create\",\"delete\",\"update\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "73e938df-3d80-4d92-952d-4ff5b302019c",
            "name": "Full access in x509-identity-mgmt - /x509/v1",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"x509-identity-mgmt\"]",
              "scopes": "[\"view\",\"create\",\"delete\",\"update\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "263e2e53-8aa9-4c4c-a1ba-7f70687b7d92",
            "name": "View in Data Broker Streams - /streams",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"data-broker-streams\"]",
              "scopes": "[\"view\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "aa233d04-4090-4b9c-bd43-d0f59cf7b556",
            "name": "Full access in Data Broker - /device/(.*)/latest, /subscription",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"data-broker\"]",
              "scopes": "[\"view\",\"create\",\"delete\",\"update\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "a4381b40-f4ab-4eed-b37d-e2570daf1c87",
            "name": "Full access in images - /fw-image",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"image\"]",
              "scopes": "[\"view\",\"create\",\"delete\",\"update\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "b7bbf6f5-fa6a-45a9-a20b-d9479cbd1134",
            "name": "View data-manager-export- /export",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"data-manager-export\"]",
              "scopes": "[\"view\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "b2f634e1-d8f9-4ac6-80af-693c08021aef",
            "name": "Create data-manager-import  /import",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"data-manager-import\"]",
              "scopes": "[\"create\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "6b9f7f14-a6b8-428b-9ab6-263935c037d9",
            "name": "Full access in cron - /cron",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"cron\"]",
              "scopes": "[\"view\",\"create\",\"delete\",\"update\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "ca1c7e38-cba8-455e-ab31-e3ed0adbece9",
            "name": "View influxdb-retriever - /tss",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"influxdb-retriever\"]",
              "scopes": "[\"view\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          },
          {
            "id": "4dba841d-da29-4c48-b9e3-46613c57f16f",
            "name": "View kafka-ws-ticket: /kafka-ws",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"kafka-ws-ticket\"]",
              "scopes": "[\"view\"]",
              "applyPolicies": "[\"Should be user\"]"
            }
          }
        ],
        "scopes": [
          {
            "id": "d744d452-bd48-4adb-9210-88734d666187",
            "name": "view"
          },
          {
            "id": "88fa1beb-e1a2-4dc5-84c7-41bad0c0bc95",
            "name": "update"
          },
          {
            "id": "c0736d68-e2fc-4500-88dc-dcdae87d2a35",
            "name": "delete"
          },
          {
            "id": "4e39cbac-d007-44e3-a875-14ce064c670a",
            "name": "create"
          }
        ],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "48ffe08b-4a88-4d82-a3cb-d865c7025719",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ac9b2ae6-02f7-4745-962b-3821e672d8a3",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/admin/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/admin/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "db49746d-569c-4a6a-b49d-1ecb2ca11bda",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "6bef6281-7b97-4203-a37d-5270e857fc0c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "9de5862a-e56a-48fa-aca5-415c75935746",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5c110762-8a28-44ff-8eec-c3f15fa3df4c",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "ebc9c09c-c915-45fd-800b-80453bb63086",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "20f90241-af41-4a23-8bdd-4b58ecb3a187",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "785f54da-a18f-4e8c-ae0e-38a430721442",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5a4b9a27-7d39-4972-aaa2-a257ffdce4e2",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "96ad8ec0-e6fd-4787-9eca-02fa3b3b72e2",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c3f86100-c7d0-4ce9-b21e-b560dae84da9",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "25553634-d4a4-489e-a72b-80abe8782c91",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6f64e32b-4949-46d4-a817-b16e07d6c7d5",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "aa6ced0e-9048-4959-8481-3d15269be658",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "36968cd3-393c-4b30-a3c7-0e10b9beec56",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "2205bc13-7e7d-44de-9954-45578dbacd83",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3d707fc0-abe6-4ada-a79a-1dd6fd1499e9",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2efa4c98-5b1a-41a6-b6a2-e738864e3b8d",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fde6e7a7-a02a-4773-96b6-ce7596b7660e",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "29e93486-ea69-48f1-9fc6-a56484444cd9",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "9d826b6a-1d53-474a-b8d7-69646cde7196",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a3bb4015-7fa7-4dbb-b76c-25f85ec02e8e",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "12493ef1-c14c-4fcd-a511-e5d7eb8c2511",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "df7bf3e2-150b-481a-9c77-236f8f839db9",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "a3bbe79a-a805-48f1-a858-e7e07f33ad5a",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "05c21a18-87b6-4be3-849a-37337cadfb23",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "728bcd1e-fb9d-4346-a080-b7a4e7373c48",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6db83ba5-53a4-4a4b-a826-9e768907d4df",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "67a3f024-0bb3-4aa8-abef-6bc7bd8947f5",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "35eb3c40-d11b-46f6-a40e-4d08cd90e4c4",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "c3e2d2f2-fc29-41ab-b006-22610bbd2c5f",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e840ad02-b86f-43d6-b64d-45bf50de9755",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "17047bb6-920f-40a8-bda0-288b1ca1a5dd",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "10ebfdac-4797-4528-bef5-d6789c9c40a7",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "e0689ff5-26e0-48a7-b89e-8c0081f21022",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "ec81b05b-830d-42b1-8f5f-f511dc142c8f",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "56306f10-b8e2-4231-bc51-501b48f41495",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "keycloak",
  "accountTheme": "keycloak.v2",
  "adminTheme": "keycloak",
  "emailTheme": "keycloak",
  "eventsEnabled": true,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "UPDATE_CONSENT_ERROR",
    "SEND_RESET_PASSWORD",
    "GRANT_CONSENT",
    "VERIFY_PROFILE_ERROR",
    "UPDATE_TOTP",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "UPDATE_PROFILE_ERROR",
    "IMPERSONATE",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "REGISTER",
    "LOGOUT",
    "AUTHREQID_TO_TOKEN",
    "DELETE_ACCOUNT_ERROR",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "UPDATE_PASSWORD",
    "DELETE_ACCOUNT",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "CLIENT_DELETE",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "VERIFY_EMAIL",
    "CLIENT_DELETE_ERROR",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "EXECUTE_ACTIONS",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "OAUTH2_DEVICE_AUTH",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "CLIENT_UPDATE_ERROR",
    "UPDATE_PROFILE",
    "AUTHREQID_TO_TOKEN_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "CLIENT_REGISTER_ERROR",
    "SEND_VERIFY_EMAIL_ERROR",
    "SEND_IDENTITY_PROVIDER_LINK",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "VERIFY_PROFILE",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "f059958c-91df-4ab7-be1d-8d403ea13428",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "514c7e97-43eb-4f11-9b30-46b829a62886",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "12b3b59c-9923-4545-a7e2-679f824866c6",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "c850833a-37be-4691-9a5d-d5f356d3cdd9",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "daf2ab09-fe1b-4776-a6cf-799c75626a2e",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      },
      {
        "id": "0539cfac-05a4-413e-9228-f8b32dc4a201",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "12aa6a00-d5e3-4d0a-8a03-90b0ea617dfd",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "1e4a6541-506e-4f27-9278-248ccbb641c5",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "223d9ce1-1473-4764-887f-7ccaf75dc6e7",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "39684966-d6f2-4a24-95d0-91e36f36a334",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "f957a539-0d54-4824-b172-78125b9ce616",
        "name": "pga-keystore",
        "providerId": "rsa",
        "subComponents": {},
        "config": {
          "privateKey": [
            "**********"
          ],
          "certificate": [
            "MIIF4TCCBMmgAwIBAgIMO6xQ7idSL309OEHGMA0GCSqGSIb3DQEBCwUAMEwxCzAJ BgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMSIwIAYDVQQDExlB bHBoYVNTTCBDQSAtIFNIQTI1NiAtIEcyMB4XDTE5MDgyODE0MjAxMFoXDTIwMTEx NTE5MzIyMFowOzEhMB8GA1UECxMYRG9tYWluIENvbnRyb2wgVmFsaWRhdGVkMRYw FAYDVQQDDA0qLmNwcWQuY29tLmJyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB CgKCAQEAyCTV3PoQ/PUonTsLr3e5f3ygPx4WW0X7yg2V2YAqMZHpWwTYcXvb9JXZ o8wWdOdACigsJqiYZu8ThYl/XWrhlAgOQJHPAMRphVQmEG/M1NeXdmcfjfV/1Xxi lxbw5fikA+9jkkjChzWooA9NU4frUlkZMDJyMzSwxsmZ094ROG+NBDmXPx1X1L8k fLt8hR77AC05HdGqqFGHrl/NhB5Lrhv/4JzIl2vhSe9FRYZ3lmZYBBuzSHuq0Dht 2bVH+/ZFgtOaLyJdTOUJLXBGs19DFQn9GlTkcKCXpfHNmOX9U7YBvlWADIKyy1Eg wSgTs9dgvLk6CRp9SVHuCqC5ZTSLsQIDAQABo4IC0jCCAs4wDgYDVR0PAQH/BAQD AgWgMIGJBggrBgEFBQcBAQR9MHswQgYIKwYBBQUHMAKGNmh0dHA6Ly9zZWN1cmUy LmFscGhhc3NsLmNvbS9jYWNlcnQvZ3NhbHBoYXNoYTJnMnIxLmNydDA1BggrBgEF BQcwAYYpaHR0cDovL29jc3AyLmdsb2JhbHNpZ24uY29tL2dzYWxwaGFzaGEyZzIw VwYDVR0gBFAwTjBCBgorBgEEAaAyAQoKMDQwMgYIKwYBBQUHAgEWJmh0dHBzOi8v d3d3Lmdsb2JhbHNpZ24uY29tL3JlcG9zaXRvcnkvMAgGBmeBDAECATAJBgNVHRME AjAAMD4GA1UdHwQ3MDUwM6AxoC+GLWh0dHA6Ly9jcmwyLmFscGhhc3NsLmNvbS9n cy9nc2FscGhhc2hhMmcyLmNybDAlBgNVHREEHjAcgg0qLmNwcWQuY29tLmJyggtj cHFkLmNvbS5icjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0j BBgwFoAU9c3VPAhQ+WpPOreX2laD5mnSaPcwHQYDVR0OBBYEFEEe+qWmvA4hhRR8 HBE1bf5Gy7bmMIIBBAYKKwYBBAHWeQIEAgSB9QSB8gDwAHUAb1N2rDHwMRnYmQCk URX/dxUcEdkCwQApBo2yCJo32RMAAAFs2Jkt7gAABAMARjBEAiBazUlIUktOoznV X8weQkUMX8TfwPRECVE9EtXRuOkSJAIgZ+4ZnwOpP52qwtAsXdQDgL6TXaln7CTA 07cPi8Ra2ogAdwCyHgXMi6LNiiBOh2b5K7mKJSBna9r6cOeySVMt74uQXgAAAWzY mS2ZAAAEAwBIMEYCIQCVRCyr/XKuN1Kp6C06avzQ2JgOPUoxUIpHez93ah41+wIh AINT+Edmg0GbeWyE3QkDjTuKX87VdnKvMg79t+0Zy0boMA0GCSqGSIb3DQEBCwUA A4IBAQB9HxMH2Sp6iGVckLRs/TRaWA7Prcm62fk32DMUr68jLDtBdHaEDsjHP6jV 3Oj3jr6CvuabGWXy8ai3pRRfERurNOlmGtQ7HmH8uJLqDyL8P0qWJNG3ac+MvndV PKnekk5cIWyvZLDmadwVTI38tkDhNc436fa75RC2GGSLtyqwa0NQm8CYz5G6G33k sOh2ymygNQLWDWN/UpQ96YfB/XrDKC3GIbROyYWMcrR0oPrKfoLMOfpeP0D9lUch pMw04Zftq7giiWX2V0kGYI+p1rE88PGMKc3k7Rhz+bwOflSL9g211+AxxoXhlPFx TqvDbW0cuQZ69Wsyz9BjY71xrIMd"
          ],
          "active": [
            "true"
          ],
          "priority": [
            "200"
          ],
          "enabled": [
            "true"
          ],
          "algorithm": [
            "RS256"
          ]
        }
      },
      {
        "id": "4dfe2559-dfc6-49bc-b255-0e65d976bcc3",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "pt-BR",
    "en"
  ],
  "defaultLocale": "en",
  "authenticationFlows": [
    {
      "id": "b9a567e3-aadb-4d1f-ab99-2ef8d4c6d2a2",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "4e06cca6-62be-480d-93df-0080d9b1747c",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "0adb9a8b-00fb-448a-8163-0adc016ded68",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "95db77b0-4823-42eb-91fa-f50b8e524c52",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "bc10c627-d57c-4740-97a4-51fd14c9ad2e",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "6a90a1a2-246f-4bea-b289-dca2862e8cec",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "50b5d290-5750-42a5-a9d1-ac2b89661a41",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "a4cf0346-c0ed-4c74-8644-bdd47b3d4a41",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e306eb91-5c87-447d-9f57-a78f550bbeb2",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "2d41d9c9-b0c0-4dbc-b747-7fe1dd939548",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "94eabf1d-c198-4524-96e8-0e0e3beaf5c2",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "1115048c-5269-42ca-bb28-6d83be728c4b",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "0facc800-64f9-4a7c-8fda-c98612452667",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "40a90bf7-0afc-4a03-bbe1-5b5edbe136f3",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e17900a4-d3f5-4ea1-b673-8db59e394ec3",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "72de6322-e560-42fc-995a-2135aded863a",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "4018edb0-d392-46e8-8e6d-b8c2fb536fcb",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "727d2ce1-5dc9-43dc-938c-6b2d53e132cc",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "f2df1bea-32ea-4ced-ad7e-f0c102d1b8ea",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d8ca50d3-936a-42d9-9fbc-47e3c20bcd59",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "8fe8981c-bcd4-450d-bde9-025b657d1772",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "51f029c1-31d0-4143-81a5-22dcd6786282",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 1001,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 1002,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "13.0.0",
  "userManagedAccessAllowed": false
}